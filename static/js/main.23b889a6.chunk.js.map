{"version":3,"sources":["store/index.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoItem/TodoItemHandler.js","components/TodoList/TodoList.js","components/TodoList/TodoListHandler.js","App.js","AppConnect.js","index.js"],"names":["ACTION_TYPES","ADD_TODOS","SWITCH_LOADING","IS_INITIALIZED","HAS_ERROR","IS_SORT","ADD_SORTED_TODOS","DELETE_TODO","switchLoading","isLoading","type","payload","errorTodos","hasError","receiveTodosAndUsers","dispatch","isInitialized","Promise","all","fetch","then","_ref","_ref2","Object","slicedToArray","responseTodos","responseUsers","json","_ref3","_ref4","todos","usersMapApi","reduce","acum","user","_objectSpread","defineProperty","id","getTodosWithUsers","todosArray","usersApi","map","todo","userId","todosSorted","preparedTodos","sortedTodos","toConsumableArray","sort","a","b","title","localeCompare","addTodos","catch","initialState","isSorted","store","createStore","state","arguments","length","undefined","action","deleteTodoWithList","list","filter","applyMiddleware","thunk","User","react_default","createElement","className","name","email","TodoItem","deleteTodo","href","concat","completed","components_User_User","onClick","EnhancedTodoItem","connect","idTodo","TodoList","_ref$todos","_ref$todosSorted","Fragment","TodoItemHandler","key","EnhancedList","App","sortTodos","TodoListHandler","EnhancedApp","ReactDOM","render","es","AppConnect","document","getElementById"],"mappings":"41BAGA,IAAMA,EAAe,CACnBC,UAAW,aACXC,eAAgB,kBAChBC,eAAgB,kBAChBC,UAAW,aACXC,QAAS,WACTC,iBAAkB,oBAClBC,YAAa,gBAkBFC,EAAgB,SAAAC,GAAS,MAAK,CACzCC,KAAMV,EAAaE,eACnBS,QAASF,IAQEG,EAAa,SAAAC,GAAQ,MAAK,CACrCH,KAAMV,EAAaI,UACnBO,QAASE,IAOEC,EAAuB,kBAAM,SAACC,GAdhB,IAAAC,EAezBD,EAASP,GAAc,IACvBO,GAhByBC,GAgBJ,EAhBsB,CAC3CN,KAAMV,EAAaG,eACnBQ,QAASK,KAeTD,EAASH,GAAW,IAEpBK,QAAQC,IAAI,CACVC,MAAM,8CACNA,MAAM,gDAELC,KAAK,SAAAC,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAEI,EAAFH,EAAA,GAAiBI,EAAjBJ,EAAA,UAAoCL,QACvCC,IAAI,CAACO,EAAcE,OAAQD,EAAcC,WAC3CP,KAAK,SAAAQ,GAAoB,IAAAC,EAAAN,OAAAC,EAAA,EAAAD,CAAAK,EAAA,GAAlBE,EAAkBD,EAAA,GAClBE,EADkBF,EAAA,GAErBG,OAAO,SAACC,EAAMC,GAAP,OAAAC,EAAA,GAAsBF,EAAtBV,OAAAa,EAAA,EAAAb,CAAA,GAA6BW,EAAKG,GAAKH,KAAS,IAE1D,SAASI,EAAkBC,EAAYC,GACrC,OAAOD,EAAWE,IAAI,SAAAC,GAAI,OAAAP,EAAA,GACrBO,EADqB,CAExBR,KAAMM,EAASE,EAAKC,YAIxB,IA9CwBC,EA8ClBC,EAAgBP,EAAkBR,EAAOC,GACzCe,EAAcvB,OAAAwB,EAAA,EAAAxB,CAAIe,EAAkBR,EAAOC,IAAciB,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAMC,cAAcF,EAAEC,SAEtGpC,EAASP,GAAc,IACvBO,EAvDkB,SAAAe,GAAK,MAAK,CAChCpB,KAAMV,EAAaC,UACnBU,QAASmB,GAqDIuB,CAASR,IAClB9B,GAnDwB6B,EAmDAE,EAnDgB,CAC5CpC,KAAMV,EAAaM,iBACnBK,QAASiC,OAmDNU,MAAM,WACLvC,EAASH,GAAW,IACpBG,EAASP,GAAc,QAIvB+C,EAAe,CACnBzB,MAAO,GACPc,YAAa,GACbnC,WAAW,EACXO,eAAe,EACfH,UAAU,EACV2C,UAAU,GA+DL,IAAMC,EAAQC,YA5DrB,WAAoD,IAAnCC,EAAmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3BL,EAAcQ,EAAaH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC9C,OAAQG,EAAOrD,MACb,KAAKV,EAAaC,UAChB,OAAAkC,EAAA,GACKwB,EADL,CAEE7B,MAAMP,OAAAwB,EAAA,EAAAxB,CAAKwC,EAAOpD,WAItB,KAAKX,EAAaO,YAChB,IAAMyD,EAAqB,SAAAC,GAAI,OAAIA,EAChCC,OAAO,SAAAxB,GAAI,OAAIA,EAAKL,KAAO0B,EAAOpD,WAErC,OAAAwB,EAAA,GACKwB,EADL,CAEE7B,MAAOkC,EAAmBL,EAAM7B,OAChCc,YAAaoB,EAAmBL,EAAMf,eAI1C,KAAK5C,EAAaM,iBAChB,OAAA6B,EAAA,GACKwB,EADL,CAEEf,YAAYrB,OAAAwB,EAAA,EAAAxB,CAAKwC,EAAOpD,WAI5B,KAAKX,EAAaE,eAChB,OAAAiC,EAAA,GACKwB,EADL,CAEElD,UAAWsD,EAAOpD,UAItB,KAAKX,EAAaG,eAChB,OAAAgC,EAAA,GACKwB,EADL,CAEE3C,cAAe+C,EAAOpD,UAI1B,KAAKX,EAAaI,UAChB,OAAA+B,EAAA,GACKwB,EADL,CAEE9C,SAAUkD,EAAOpD,UAIrB,KAAKX,EAAaK,QAChB,OAAA8B,EAAA,GACKwB,EADL,CAEEH,UAAWG,EAAMH,WAIrB,QACE,OAAOG,IAMXQ,YAAgBC,YC3HHC,MA1Bf,SAAAhD,GAAwB,IAARa,EAAQb,EAARa,KACd,OACEoC,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,QACbF,EAAArB,EAAAsB,cAAA,KAAGC,UAAU,qBAAb,eAEEF,EAAArB,EAAAsB,cAAA,QAAMC,UAAU,eACbtC,EAAKuC,OAGVH,EAAArB,EAAAsB,cAAA,KAAGC,UAAU,eAAb,WAEEF,EAAArB,EAAAsB,cAAA,QAAMC,UAAU,eACbtC,EAAKwC,gBC2BDC,MAtCf,SAAAtD,GAAwC,IAApBqB,EAAoBrB,EAApBqB,KAAMkC,EAAcvD,EAAduD,WACxB,OACEN,EAAArB,EAAAsB,cAAA,MAAIC,UAAU,wBACZF,EAAArB,EAAAsB,cAAA,KAAGM,KAAK,IAAIL,UAAU,aACpBF,EAAArB,EAAAsB,cAAA,UAAK7B,EAAKS,OACVmB,EAAArB,EAAAsB,cAAA,KAAGC,UAAU,wBAAb,aAEEF,EAAArB,EAAAsB,cAAA,QAAMC,UAAS,oBAAAM,QAAyC,IAAnBpC,EAAKqC,UACtC,WACA,gBAEkB,IAAnBrC,EAAKqC,UAAsB,SAAW,WAI3CT,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,mBACbF,EAAArB,EAAAsB,cAACS,EAAD,CAAM9C,KAAMQ,EAAKR,OACjBoC,EAAArB,EAAAsB,cAAA,UAAQ7D,KAAK,SAASuE,QAAS,kBAAML,EAAWlC,EAAKL,MAArD,mBCLK6C,EATUC,YACvB,SAAAxB,GAAK,MAAK,CACRlD,UAAWkD,EAAMlD,UACjBO,cAAe2C,EAAM3C,cACrBH,SAAU8C,EAAM9C,WARO,SAAAE,GAAQ,MAAK,CACtC6D,WAAY,SAAAvC,GAAE,OAAItB,GHQMqE,EGRc/C,EHQH,CACnC3B,KAAMV,EAAaO,YACnBI,QAASyE,KAFe,IAAAA,KGLDD,CAOvBR,SCkCaU,MA5Cf,SAAAhE,GAA8D,IAAAiE,EAAAjE,EAA1CS,aAA0C,IAAAwD,EAAlC,GAAkCA,EAAAC,EAAAlE,EAA9BuB,mBAA8B,IAAA2C,EAAhB,GAAgBA,EAAZ/B,EAAYnC,EAAZmC,SAChD,OACEc,EAAArB,EAAAsB,cAAAD,EAAArB,EAAAuC,SAAA,KACElB,EAAArB,EAAAsB,cAAA,SACED,EAAArB,EAAAsB,cAAA,QAAMC,UAAU,cAAhB,YAEFF,EAAArB,EAAAsB,cAAA,MAAIC,UAAU,oBACVhB,EAOEZ,EAAYH,IAAI,SAAAC,GAAI,OAClB4B,EAAArB,EAAAsB,cAACkB,EAAD,CAAiB/C,KAAMA,EAAMgD,IAAKhD,EAAKL,OANzCP,EAAMW,IAAI,SAAAC,GAAI,OACZ4B,EAAArB,EAAAsB,cAACkB,EAAD,CAAiB/C,KAAMA,EAAMgD,IAAKhD,EAAKL,UCJtCsD,EARMR,YACnB,SAAAxB,GAAK,MAAK,CACR7B,MAAO6B,EAAM7B,MACbc,YAAae,EAAMf,YACnBY,SAAUG,EAAMH,WAJC2B,CAMnBE,GC8DaO,SA/DH,SAAAvE,GAMN,IALJZ,EAKIY,EALJZ,UACAK,EAIIO,EAJJP,qBACAE,EAGIK,EAHJL,cACAH,EAEIQ,EAFJR,SACAgF,EACIxE,EADJwE,UAEA,OAAIpF,EACK6D,EAAArB,EAAAsB,cAAA,KAAGC,UAAU,WAAb,cAGL3D,EAEAyD,EAAArB,EAAAsB,cAAAD,EAAArB,EAAAuC,SAAA,KACElB,EAAArB,EAAAsB,cAAA,MAAIC,UAAU,cAAd,6BACAF,EAAArB,EAAAsB,cAAA,UACE7D,KAAK,SACL8D,UAAU,kCACVS,QAASnE,GAHX,eAWDE,EAgBHsD,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,OACbF,EAAArB,EAAAsB,cAAA,UACE7D,KAAK,SACLuE,QAASY,EACTrB,UAAU,wBAHZ,QAOAF,EAAArB,EAAAsB,cAACuB,EAAD,OAtBAxB,EAAArB,EAAAsB,cAAAD,EAAArB,EAAAuC,SAAA,KACElB,EAAArB,EAAAsB,cAAA,MAAIC,UAAU,cAAd,mCACAF,EAAArB,EAAAsB,cAAA,UACE7D,KAAK,SACL8D,UAAU,uBACVS,QAASnE,GAHX,WCpBOiF,EATKZ,YAClB,SAAAxB,GAAK,MAAK,CACRlD,UAAWkD,EAAMlD,UACjBO,cAAe2C,EAAM3C,cACrBH,SAAU8C,EAAM9C,WATO,SAAAE,GAAQ,MAAK,CACtCD,qBAAsB,kBAAMC,EAASD,MACrC+E,UAAW,kBAAM9E,EPqCa,CAC9BL,KAAMV,EAAaK,aOnCD8E,CAOlBS,GCVFI,IAASC,OACP3B,EAAArB,EAAAsB,cAAC2B,EAAA,EAAD,CAAUzC,MAAOA,GACfa,EAAArB,EAAAsB,cAAC4B,EAAD,OAEDC,SAASC,eAAe","file":"static/js/main.23b889a6.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst ACTION_TYPES = {\n  ADD_TODOS: 'TODOS::ADD',\n  SWITCH_LOADING: 'LOADING::SWITCH',\n  IS_INITIALIZED: 'INITIALIZED::IS',\n  HAS_ERROR: 'ERROR::HAS',\n  IS_SORT: 'IS::SORT',\n  ADD_SORTED_TODOS: 'SORTED_TODOS::ADD',\n  DELETE_TODO: 'TODO::DELETE',\n};\n\nexport const deleteTodo = idTodo => ({\n  type: ACTION_TYPES.DELETE_TODO,\n  payload: idTodo,\n});\n\nexport const addTodos = todos => ({\n  type: ACTION_TYPES.ADD_TODOS,\n  payload: todos,\n});\n\nexport const addSortedTodos = todosSorted => ({\n  type: ACTION_TYPES.ADD_SORTED_TODOS,\n  payload: todosSorted,\n});\n\nexport const switchLoading = isLoading => ({\n  type: ACTION_TYPES.SWITCH_LOADING,\n  payload: isLoading,\n});\n\nexport const initialized = isInitialized => ({\n  type: ACTION_TYPES.IS_INITIALIZED,\n  payload: isInitialized,\n});\n\nexport const errorTodos = hasError => ({\n  type: ACTION_TYPES.HAS_ERROR,\n  payload: hasError,\n});\n\nexport const sortTodos = () => ({\n  type: ACTION_TYPES.IS_SORT,\n});\n\nexport const receiveTodosAndUsers = () => (dispatch) => {\n  dispatch(switchLoading(true));\n  dispatch(initialized(true));\n  dispatch(errorTodos(false));\n\n  Promise.all([\n    fetch('https://jsonplaceholder.typicode.com/todos'),\n    fetch('https://jsonplaceholder.typicode.com/users'),\n  ])\n    .then(([responseTodos, responseUsers]) => Promise\n      .all([responseTodos.json(), responseUsers.json()]))\n    .then(([todos, users]) => {\n      const usersMapApi = users\n        .reduce((acum, user) => ({ ...acum, [user.id]: user }), {});\n\n      function getTodosWithUsers(todosArray, usersApi) {\n        return todosArray.map(todo => ({\n          ...todo,\n          user: usersApi[todo.userId],\n        }));\n      }\n\n      const preparedTodos = getTodosWithUsers(todos, usersMapApi);\n      const sortedTodos = [...getTodosWithUsers(todos, usersMapApi)].sort((a, b) => a.title.localeCompare(b.title));\n\n      dispatch(switchLoading(false));\n      dispatch(addTodos(preparedTodos));\n      dispatch(addSortedTodos(sortedTodos));\n    })\n    .catch(() => {\n      dispatch(errorTodos(true));\n      dispatch(switchLoading(false));\n    });\n};\n\nconst initialState = {\n  todos: [],\n  todosSorted: [],\n  isLoading: false,\n  isInitialized: false,\n  hasError: false,\n  isSorted: false,\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_TODOS: {\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n    }\n\n    case ACTION_TYPES.DELETE_TODO: {\n      const deleteTodoWithList = list => list\n        .filter(todo => todo.id !== action.payload);\n\n      return {\n        ...state,\n        todos: deleteTodoWithList(state.todos),\n        todosSorted: deleteTodoWithList(state.todosSorted),\n      };\n    }\n\n    case ACTION_TYPES.ADD_SORTED_TODOS: {\n      return {\n        ...state,\n        todosSorted: [...action.payload],\n      };\n    }\n\n    case ACTION_TYPES.SWITCH_LOADING: {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n\n    case ACTION_TYPES.IS_INITIALIZED: {\n      return {\n        ...state,\n        isInitialized: action.payload,\n      };\n    }\n\n    case ACTION_TYPES.HAS_ERROR: {\n      return {\n        ...state,\n        hasError: action.payload,\n      };\n    }\n\n    case ACTION_TYPES.IS_SORT: {\n      return {\n        ...state,\n        isSorted: !state.isSorted,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nfunction User({ user }) {\n  return (\n    <div className=\"user\">\n      <p className=\"user__responsible\">\n        responsible:\n        <span className=\"user_indent\">\n          {user.name}\n        </span>\n      </p>\n      <p className=\"user__email\">\n        contact:\n        <span className=\"user_indent\">\n          {user.email}\n        </span>\n      </p>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\nimport './TodoItem.css';\n\nfunction TodoItem({ todo, deleteTodo }) {\n  return (\n    <li className=\"todo__list todo-card\">\n      <a href=\"#\" className=\"todo-card\">\n        <h2>{todo.title}</h2>\n        <p className=\"todo-list__completed\">\n          completed:\n          <span className={`todo-list_indent ${todo.completed === false\n            ? 'text-red'\n            : 'text-green'}`}\n          >\n            {todo.completed === false ? '\\u2A2F' : '\\u2713'}\n          </span>\n        </p>\n\n        <div className=\"todo-list__user\">\n          <User user={todo.user} />\n          <button type=\"button\" onClick={() => deleteTodo(todo.id)}>Delete Todo</button>\n        </div>\n      </a>\n    </li>\n  );\n}\n\nconst shape = PropTypes.shape({\n  name: PropTypes.string,\n  email: PropTypes.string,\n});\n\nTodoItem.propTypes = {\n  deleteTodo: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: shape.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import { connect } from 'react-redux';\nimport TodoItem from './TodoItem';\nimport { deleteTodo } from '../../store/index';\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTodo: id => dispatch(deleteTodo(id)),\n});\n\nconst EnhancedTodoItem = connect(\n  state => ({\n    isLoading: state.isLoading,\n    isInitialized: state.isInitialized,\n    hasError: state.hasError,\n  }),\n  mapDispatchToProps,\n)(TodoItem);\n\nexport default EnhancedTodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItemHandler from '../TodoItem/TodoItemHandler';\nimport './TodoList.css';\n\nfunction TodoList({ todos = [], todosSorted = [], isSorted }) {\n  return (\n    <>\n      <p>\n        <span className=\"todo-title\">Todos: </span>\n      </p>\n      <ul className=\"todo-list__items\">\n        {!isSorted\n          ? (\n            todos.map(todo => (\n              <TodoItemHandler todo={todo} key={todo.id} />\n            ))\n          )\n          : (\n            todosSorted.map(todo => (\n              <TodoItemHandler todo={todo} key={todo.id} />\n            ))\n          )}\n      </ul>\n    </>\n  );\n}\n\nconst shape = PropTypes.shape({\n  title: PropTypes.string,\n  completed: PropTypes.string,\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      todo: shape,\n    }).isRequired,\n  ).isRequired,\n  todosSorted: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      todo: shape,\n    }).isRequired,\n  ).isRequired,\n  isSorted: PropTypes.bool.isRequired,\n};\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport TodoList from './TodoList';\n\nconst EnhancedList = connect(\n  state => ({\n    todos: state.todos,\n    todosSorted: state.todosSorted,\n    isSorted: state.isSorted,\n  }),\n)(TodoList);\n\nexport default EnhancedList;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport EnhancedList from './components/TodoList/TodoListHandler';\n\nimport './App.css';\n\nconst App = ({\n  isLoading,\n  receiveTodosAndUsers,\n  isInitialized,\n  hasError,\n  sortTodos,\n}) => {\n  if (isLoading) {\n    return <p className=\"loading\">Loading...</p>;\n  }\n\n  if (hasError) {\n    return (\n      <>\n        <h1 className=\"App__title\">You want to upload again.</h1>\n        <button\n          type=\"button\"\n          className=\"btn btn-warning load load-again\"\n          onClick={receiveTodosAndUsers}\n        >\n          Load again\n        </button>\n      </>\n    );\n  }\n\n  if (!isInitialized) {\n    return (\n      <>\n        <h1 className=\"App__title\">Want to upload a list of todos?</h1>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary load\"\n          onClick={receiveTodosAndUsers}\n        >\n          Load\n        </button>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <button\n        type=\"button\"\n        onClick={sortTodos}\n        className=\"btn btn-primary load\"\n      >\n        Sort\n      </button>\n      <EnhancedList />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  receiveTodosAndUsers: PropTypes.func.isRequired,\n  isInitialized: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  sortTodos: PropTypes.func.isRequired,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { receiveTodosAndUsers, sortTodos } from './store/index';\n\nconst mapDispatchToProps = dispatch => ({\n  receiveTodosAndUsers: () => dispatch(receiveTodosAndUsers()),\n  sortTodos: () => dispatch(sortTodos()),\n});\n\nconst EnhancedApp = connect(\n  state => ({\n    isLoading: state.isLoading,\n    isInitialized: state.isInitialized,\n    hasError: state.hasError,\n  }),\n  mapDispatchToProps,\n)(App);\n\nexport default EnhancedApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport EnhancedApp from './AppConnect';\n\nReactDOM.render((\n  <Provider store={store}>\n    <EnhancedApp />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}